#!/usr/bin/env bash

if ! git fetch 2> /dev/null ; then
    echo "Could not fetch latest changes, maybe you are offline?"
    echo "You might break stuff others just fixed..."
    echo "Do you still want to deploy? then type yes"
    read -p "" input
    if [ "x$input" != "xyes" ]; then
        exit 2
    fi
    echo ""
fi

echo ""
DEPLOY_BRANCH=`git rev-parse --abbrev-ref HEAD`

if [ `git rev-parse --verify origin/$DEPLOY_BRANCH` != `git rev-parse --verify $DEPLOY_BRANCH` ]; then
    echo "You have commits on the $DEPLOY_BRANCH branch not pushed to origin yet. The next operator who deploys ansible will probably break your stuff."
    echo "do you still want to deploy your unpublished changes? then type yes"
    read -p "" input
    if [ "x$input" != "xyes" ]; then
        exit 2
    fi
    echo ""
fi

if ! (git diff --exit-code >/dev/null && git diff --cached --exit-code >/dev/null); then
    echo "You have uncomitted changes. The next operator who deploys ansible will probably break your stuff."
    echo "do you still which to deploy your unpublished changes? then type yes"
    read -p "" input
    if [ "x$input" != "xyes" ]; then
        exit 2
    fi
    echo ""
fi


export ANSIBLE_NOCOWS=1

source "_ansible_keepass_util.sh"

KEEPASS_DIR=$(dirname "${KEEPASS}")
if [ -f "${KEEPASS_VERSION_CONFIG}" ]; then
  KEEPASS_REQUIRED_VERSION=$(cat "${KEEPASS_VERSION_CONFIG}")
  ( cd "${KEEPASS_DIR}"; git merge-base --is-ancestor $KEEPASS_REQUIRED_VERSION HEAD )

  if [ $? -ne 0 ]; then
    echo "keepass checkout must be newer or equal to ${KEEPASS_REQUIRED_VERSION}, which it isn't"
    echo "do a git pull before continuing"

    exit 1
  fi
fi

if [ -z "${KEEPASS_FILE_CONFIG}" -o ! -f "${KEEPASS}" -o ! -r "${KEEPASS}" ]; then
  >&2 echo "Keepass file '${KEEPASS}' not a readable file, exit"
  exit 1
else
  # If the file seems to exist, store it
  echo "${KEEPASS}" > "${KEEPASS_FILE_CONFIG}"
fi

#
# Ask for the keepass file, query keychain or use the env var
#
if [ -z "${KEEPASS_PW}" ]; then
  if [[ "$OSTYPE" == "darwin"* ]]; then
    KEEPASS_PW=`security find-generic-password  -w -a "${KEEPASS}"`
  else
    echo -n "Keepass Password (or export KEEPASS_PW): "
    read -ers KEEPASS_PW
  fi
  echo ""
fi

if [ -z "${KEEPASS_PW}" ]; then
  >&2 echo "password is empty, exit"
  exit 1
fi

#
# Test
#
echo "using keepass file: '${KEEPASS}'"
env KEEPASS="${KEEPASS}" KEEPASS_PW="${KEEPASS_PW}" $(which python) lookup_plugins/keepass.py

#
# Exec
#
exec env KEEPASS="${KEEPASS}" KEEPASS_PW="${KEEPASS_PW}" $(which ansible-playbook) --ssh-extra-args="-A" $*
