## Global settings ##

# instance id's distinguish stats of multiple relays.
# do not run multiple relays with the same instance id.
# supported variables:
#  ${HOST} : hostname
instance = "${HOST}"
max_procs = 2

admin_addr = "127.0.0.1:2035"
http_addr = "127.0.0.1:8081"
spool_dir = "/var/lib/carbon-relay-ng"
pid_file = "/var/run/carbon-relay-ng/carbon-relay-ng.pid"
## Logging ##
# one of critical error warning notice info debug
# see docs/logging.md for level descriptions
log_level = "info"

## Validation of inputs ##
# Metric name validation strictness for legacy metrics. Valid values are:
# strict - Block anything that can upset graphite: valid characters are [A-Za-z0-9_-.]; consecutive dots are not allowed
# medium - Valid characters are ASCII; no embedded NULLs
# none   - No validation is performed
validation_level_legacy = "medium"
# Metric validation for carbon2.0 (metrics2.0) metrics.
# Metrics that contain = or _is_ are assumed carbon2.0.
# Valid values are:
# medium - checks for unit and mtype tag, presence of another tag, and constency (use = or _is_, not both)
# none   - No validation is performed
validation_level_m20 = "medium"

# you can also validate that each series has increasing timestamps
validate_order = false

# How long to keep track of invalid metrics seen
# Useful time units are "s", "m", "h"
bad_metrics_max_age = "8h"

# Blacklist
# See https://github.com/graphite-ng/carbon-relay-ng/blob/master/docs/config.md#Blacklist

blacklist = [
]

## Inputs ##

### plaintext Carbon ###
listen_addr = "127.0.0.1:2033"

### Pickle Carbon ###
pickle_addr = "127.0.0.1:2034"

### AMQP ###
[amqp]
amqp_enabled = false
amqp_host = "localhost"
amqp_port = 5672
amqp_user = "guest"
amqp_password = "guest"
amqp_vhost = "/graphite"
amqp_exchange = "metrics"
amqp_queue = ""
amqp_key = "#"
amqp_durable = false
amqp_exclusive = true

# Aggregators
# See https://github.com/graphite-ng/carbon-relay-ng/blob/master/docs/config.md#Aggregators

# total count per relay
[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\..*\.users\..*'
format = '$1.viewers.total'
interval = 30
wait = 300

# room viewers per relay
[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\..*\.users\.([^_]+)_.*'
format = '$1.viewers.rooms.$2'
interval = 30
wait = 300

# quality viewers per relay
[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\..*\.users\..*(sd|hd|slides|youtube).*'
format = '$1.viewers.qualities.$2'
interval = 30
wait = 300

[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\..*\.users\..*_(dash|hls)'
format = '$1.viewers.qualities.adaptive'
interval = 30
wait = 300

[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\..*\.users\..*(mp3|opus).*'
format = '$1.viewers.qualities.audio'
interval = 30
wait = 300

# transport viewers per relay
[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\.(icecast2|hls|dash|youtube)\.users\..*'
format = '$1.viewers.types.$2'
interval = 30
wait = 300

# language viewers per relay
[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\..*\.users\..*_(native|translated)_.*'
format = '$1.viewers.languages.$2'
interval = 30
wait = 300

# minor streams
[[aggregation]]
function = 'sum'
substr = 'users'
regex = '^(.*)\..*\.users\.(lounge|ambient|chaos-west|dome|radio).*'
format = '$1.viewers.minor.$2'
interval = 30
wait = 300

# Rewriters
# See https://github.com/graphite-ng/carbon-relay-ng/blob/master/docs/config.md#Rewriters

# Routes
# See https://github.com/graphite-ng/carbon-relay-ng/blob/master/docs/config.md#Routes

[[route]]
# all metrics with '=' in them are metrics2.0, send to carbon-tagger service
key = 'carbon-default'
type = 'sendAllMatch'
destinations = [
  '127.0.0.1:2004 spool=false pickle=true'
]


[init]
# init commands (DEPRECATED)
# see https://github.com/graphite-ng/carbon-relay-ng/blob/master/docs/config.md#Imperatives
cmds = [
]

## Instrumentation ##

[instrumentation]
# in addition to serving internal metrics via expvar, you can send them to graphite/carbon
# IMPORTANT: setting this to "" will disable flushing, and metrics will pile up and lead to OOM
# see https://github.com/graphite-ng/carbon-relay-ng/issues/50
# so for now you MUST send them somewhere. sorry.
# (Also, the interval here must correspond to your setting in storage-schemas.conf if you use grafana hosted metrics)
graphite_addr = "localhost:2003"
graphite_interval = 3000  # in ms
