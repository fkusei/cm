---
  - name: install packages required to fanout streams
    apt: name={{ item }} state=latest update_cache=yes
    tags: packages
    with_items:
     - python3-jinja2

  - name: create directories
    file: dest={{ item }} state=directory
          mode=0755 owner=root group=root
    with_items:
      - /opt/fanout/scripts/
      - "{{ relay_fanout.hls_write_path }}"
      - "{{ relay_fanout.dash_write_path }}"

  - name: copying fanout-scripts
    copy: dest=/opt/fanout/scripts/{{ item }}
          src=fanout/{{ item }}
          owner=root group=root mode=0755
    with_items:
      - audio.py
      - dash.py
      - hls.py
      - webm.py
      - youtube.py
      - fanout_utils.py




  - name: create fanout systemd-units
    template: src=systemd-units/fanout_{{ item.1 }}.service.j2
              dest="/etc/systemd/system/fanout_{{ item.0 }}_{{ item.1 }}.service"
              mode=0644 owner=root group=root
    with_nested:
      - "{{ fanout_streams }}"
      - ["hls", "dash", "webm", "audio"]

  - name: create youtube systemd-units
    template: src=systemd-units/fanout_{{ item.1 }}.service.j2
              dest="/etc/systemd/system/fanout_{{ item.0 }}_{{ item.1 }}.service"
              mode=0644 owner=root group=root
    with_nested:
      - "{{ fanout_streams }}"
      - ["youtube"]
    when: youtube is defined and youtube

  - name: create fanout systemd-target (room {{item}})
    template: src=systemd-units/fanout.target.j2
              dest="/etc/systemd/system/fanout_{{ item }}.target"
              mode=0644 owner=root group=root
    with_items:
      - "{{ fanout_streams }}"

  - name: reload systemd daemon
    command: systemctl daemon-reload
    changed_when: false

  - name: enable fanout systemd-units
    service: name=fanout_{{ item.0 }}_{{ item.1 }}.service
             enabled=yes
             state=restarted
    with_nested:
      - "{{ fanout_streams }}"
      - ["hls", "dash", "webm", "audio"]

  - name: enable youtube systemd-units
    service: name=fanout_{{ item.0 }}_{{ item.1 }}.service
             enabled=yes
             state=restarted
    with_nested:
      - "{{ fanout_streams }}"
      - ["youtube"]
    when: youtube is defined and youtube

  - name: enable & start fanout systemd-target
    service: name=fanout_{{ item }}.target
             enabled=yes
    with_items:
      - "{{ fanout_streams }}"
