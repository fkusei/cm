---
  # Installation
  - name: install nginx package
    apt: name=nginx state=latest
    tags:
      - install

  # Create needed directories
  - name: added nginx htdocs and caching directories
    file: "dest=/srv/nginx/{{ item }}
          owner=www-data group=www-data
          state=directory"
    with_items:
      - "cache/streaming_fcgi/"
      - "cache/tmp"
    tags:
      - install

  # Create config
  - name: remove default vhost
    file: dest=/etc/nginx/sites-enabled/default state=absent

  - name: configure nginx
    template: dest=/etc/nginx/nginx.conf
              src=../../../roles/relay/templates/nginx/nginx.conf.j2
              mode=0644 owner=root group=root
              validate='nginx -t -c %s'
    notify:
      - reload nginx
    tags:
      - config
      - install

  # Manage vhost
  - name: create vhost
    template: dest="/etc/nginx/sites-available/{{ item }}.conf"
              src="nginx/vhosts/{{ item }}.conf.j2"
              mode=0640 owner=root group=root
    with_items:
      - streaming.media.ccc.de
    notify:
      - reload nginx
    tags:
      - config
      - install

  - name: enable vhost
    file: src=/etc/nginx/sites-available/{{ item }}.conf
          dest=/etc/nginx/sites-enabled/{{ item }}.conf
          state=link
    with_items:
      - streaming.media.ccc.de
    notify:
      - reload nginx
    tags:
      - config
      - install


  - name: disable vhost
    file: dest=/etc/nginx/sites-enabled/{{ item }}.conf
          state=absent
    with_items:
      - faq.c3voc.de
      - pre.streaming.media.ccc.de
    notify:
      - reload nginx
    tags:
      - config
      - install

  - name: remove vhost
    file: dest="/etc/nginx/sites-available/{{ item }}.conf"
          state=absent
    with_items:
      - faq.c3voc.de
      - pre.streaming.media.ccc.de
    notify:
      - reload nginx
    tags:
      - config
      - install

  - name: start nginx
    service: name=nginx enabled=yes state=started
    when: nginx is defined and nginx == 'yes'

  - name: stopp nginx
    service: name=nginx enabled=no state=stopped
    when: nginx is not defined or nginx != 'yes'
